{"version":3,"sources":["utils/fetchClient.ts","utils/FetchLoadErrors.ts","api/images.ts","components/ImageModal/ImageModal.tsx","components/SearchInput/SearchInput.tsx","utils/searchHelper.ts","components/Search/Search.tsx","components/ImageItem/ImageItem.tsx","components/Pagination/Pagination.tsx","components/ImagesDisplayControl/ImagesDisplayControl.tsx","components/Gallery/Gallery.tsx","pages/SearchPage/SearchPage.tsx","components/Header/Header.tsx","pages/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["BASE_URL","FetchLoadErrors","client","url","data","options","method","body","JSON","stringify","headers","fetch","then","response","ok","Error","json","request","apiKey","process","photo_url","search_url","getImages","page","searchImages","query","ImageModal","pathname","useLocation","useState","image","setImage","loadImage","a","imageFromServer","UNABLE_LOAD_ONE","useEffect","urls","className","src","user","profile_image","medium","alt","name","downloads","likes","views","regular","alt_description","SearchInput","onSearch","type","placeholder","value","onChange","e","target","required","title","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","Search","memo","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","navigate","useNavigate","get","handleSubmit","event","preventDefault","Number","onSubmit","ImageItem","to","id","small","Pagination","search","onClick","window","scrollTo","ImagesDisplayControl","columnsCount","onChangeColumnsCount","Select","sx","bgcolor","width","height","padding","variant","MenuProps","PaperProps","MenuItem","Gallery","images","onChangeColumn","columnsCountBreakPoints","useMemo","350","500","900","gutter","map","SearchPage","setImages","setColumnsCount","loadImages","searchedImages","UNABLE_SEARCH","results","Header","displayName","HomePage","imagesFromServer","UNABLE_LOAD","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7e86b10.chunk.js","sourcesContent":["const BASE_URL = 'https://api.unsplash.com/';\n\ntype RequestMethod = 'GET';\n\nfunction request<T>(\n  url = '',\n  method: RequestMethod = 'GET',\n  data: unknown = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return fetch(BASE_URL + url, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n};\n","// eslint-disable-next-line no-shadow\nexport enum FetchLoadErrors {\n  UNABLE_SEARCH = 'Unable to search images',\n  UNABLE_LOAD = 'Unable to load images',\n  UNABLE_LOAD_ONE = 'Unable to load one images'\n}\n","import { client } from '../utils/fetchClient';\nimport { Image } from '../types/Image';\nimport { SearchResponse } from '../types/SearchResponse';\n\nconst apiKey = process.env.REACT_APP_ACCESS_KEY;\nconst photo_url = `photos?client_id=${apiKey}&count=30`;\nconst search_url = `search/photos?&client_id=${apiKey}&count=30`;\n\nexport const getImages = (page: number) => {\n  return client.get<Image[]>(`${photo_url}&page=${page}`);\n};\n\nexport const searchImages = (query: string, page: number) => {\n  return client.get<SearchResponse>(`${search_url}&query=${query}&page=${page}`);\n};\n\nexport const getOneImage = (url: string) => {\n  return client.get<Image>(`${url}/?client_id=${apiKey}`);\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Image } from '../../types/Image';\nimport { getOneImage } from '../../api/images';\nimport { FetchLoadErrors } from '../../utils/FetchLoadErrors';\n// import { CloseButton } from '../CloseButton';\n\nexport const ImageModal: FC = () => {\n  const { pathname } = useLocation();\n  const [image, setImage] = useState<Image | null>(null);\n  const loadImage = async () => {\n    try {\n      const imageFromServer = await getOneImage(pathname);\n\n      setImage(imageFromServer);\n    } catch {\n      throw new Error(FetchLoadErrors.UNABLE_LOAD_ONE);\n    }\n  };\n\n  useEffect(() => {\n    loadImage();\n  }, []);\n\n  if (!image || !image.urls) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__content\">\n        <div className=\"modal__user\">\n          <img\n            src={image.user.profile_image.medium}\n            alt={image.user.name}\n            className=\"modal__user-img\"\n          />\n\n          <div>\n            {image.user.name}\n          </div>\n        </div>\n\n        <div className=\"modal__info\">\n          <div>\n            {`Downloads: ${image.downloads}`}\n          </div>\n\n          <div>\n            {`Likes: ${image.likes}`}\n          </div>\n\n          <div>\n            {`Views: ${image.views}`}\n          </div>\n        </div>\n      </div>\n\n      <img\n        src={image.urls.regular}\n        alt={image.alt_description}\n        className=\"modal__image\"\n      />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\ninterface Props {\n  query: string;\n  onSearch: (query: string) => void;\n}\n\nexport const SearchInput: FC<Props> = ({ query, onSearch }) => (\n  <input\n    type=\"text\"\n    name=\"search\"\n    className=\"search__input\"\n    placeholder=\"Search high-resolution images\"\n    value={query}\n    onChange={(e) => onSearch(e.target.value)}\n    required\n    title=\"Search Unsplash\"\n  />\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import React, {\n  FC, FormEvent, memo, useEffect, useState,\n} from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { SearchInput } from '../SearchInput';\nimport { searchImages } from '../../api/images';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const Search: FC = memo(() => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const query = searchParams.get('query') || '';\n  const page = searchParams.get('page') || '';\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      await searchImages(searchQuery, Number(page));\n\n      if (query !== searchQuery) {\n        setSearchParams(getSearchWith(\n          searchParams,\n          { query: searchQuery || null },\n        ));\n      }\n\n      navigate(`/search?query=${searchQuery}`);\n    } catch {\n      throw new Error('Unable to Search Images');\n    }\n  };\n\n  useEffect(() => {\n    return (() => {\n      getSearchWith(searchParams, { query: null });\n    });\n  }, [searchParams]);\n\n  return (\n    <div className=\"search\">\n      <form\n        className=\"search__form\"\n        onSubmit={handleSubmit}\n      >\n        <SearchInput\n          query={searchQuery}\n          onSearch={setSearchQuery}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"search__button\"\n          title=\"Search\"\n        >\n          Search\n        </button>\n      </form>\n    </div>\n  );\n});\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from '../../types/Image';\n\ninterface Props {\n  image: Image,\n}\nexport const ImageItem: FC<Props> = memo(({ image }) => {\n  return (\n    <div>\n      <Link\n        to={`/photos/${image.id}`}\n        className=\"gallery__image-link\"\n      >\n        <img\n          key={image.id}\n          src={image.urls.small}\n          alt={image.alt_description}\n        />\n      </Link>\n    </div>\n  );\n});\n","import React, { FC, memo } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const Pagination: FC = memo(() => {\n  const [searchParams] = useSearchParams();\n\n  const page = searchParams.get('page') || '1';\n\n  return (\n    <div className=\"pagination\">\n      <Link\n        className=\"pagination__button-prev pagination__button\"\n        to={{\n          search: getSearchWith(\n            searchParams, { page: (+page - 1).toString() },\n          ),\n        }}\n        onClick={() => window.scrollTo(0, 0)}\n      >\n      </Link>\n      <Link\n        className=\"pagination__button-next pagination__button\"\n        to={{\n          search: getSearchWith(\n            searchParams, { page: (+page + 1).toString() },\n          ),\n        }}\n        onClick={() => window.scrollTo(0, 0)}\n      >\n      </Link>\n    </div>\n  );\n});\n","import { MenuItem, Select } from '@mui/material';\nimport React, { FC } from 'react';\n\ninterface Props {\n  columnsCount: number,\n  onChangeColumnsCount: (column: number) => void;\n}\nexport const ImagesDisplayControl: FC<Props> = ({\n  columnsCount,\n  onChangeColumnsCount,\n}) => {\n  return (\n    <Select\n      sx={\n        {\n          bgcolor: 'white',\n          width: 176,\n          height: 40,\n          padding: 2,\n        }\n      }\n      variant=\"standard\"\n      value={columnsCount}\n      onChange={(e) => onChangeColumnsCount(+e.target.value)}\n      MenuProps={{\n        PaperProps: {\n          sx: {\n            bgcolor: '#fff',\n          },\n        },\n      }}\n    >\n      <MenuItem value={3}>3 Columns</MenuItem>\n      <MenuItem value={5}>5 Columns</MenuItem>\n    </Select>\n  );\n};\n","import React, {\n  FC, useMemo,\n} from 'react';\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport { ImageItem } from '../ImageItem';\nimport { Pagination } from '../Pagination';\nimport { ImagesDisplayControl } from '../ImagesDisplayControl';\nimport { Image } from '../../types/Image';\n\ninterface Props {\n  images: Image[];\n  columnsCount: number;\n  onChangeColumn: (column: number) => void;\n}\nexport const Gallery: FC<Props> = ({\n  images,\n  columnsCount,\n  onChangeColumn,\n}) => {\n  const columnsCountBreakPoints = useMemo(() => {\n    return {\n      350: 1,\n      500: 2,\n      900: columnsCount,\n    };\n  }, [columnsCount]);\n\n  return (\n    <div className=\"container\">\n      <section className=\"gallery\">\n        <ImagesDisplayControl\n          columnsCount={columnsCount}\n          onChangeColumnsCount={onChangeColumn}\n        />\n\n        <ResponsiveMasonry\n          columnsCountBreakPoints={columnsCountBreakPoints}\n          className=\"gallery__container\"\n        >\n          <Masonry gutter=\"20px\">\n            {images?.map(image => (\n              <ImageItem\n                key={image.id}\n                image={image}\n              />\n            ))}\n          </Masonry>\n        </ResponsiveMasonry>\n\n        <Pagination />\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Search } from '../../components/Search';\nimport { searchImages } from '../../api/images';\nimport { Gallery } from '../../components/Gallery';\nimport { SearchResponse } from '../../types/SearchResponse';\nimport { FetchLoadErrors } from '../../utils/FetchLoadErrors';\n\nexport const SearchPage = () => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const page = searchParams.get('page') || '1';\n  const [images, setImages] = useState<SearchResponse | null>(null);\n  const [columnsCount, setColumnsCount] = useState(3);\n\n  const loadImages = async () => {\n    try {\n      const searchedImages = await searchImages(query, +page);\n\n      setImages(searchedImages);\n    } catch {\n      throw new Error(FetchLoadErrors.UNABLE_SEARCH);\n    }\n  };\n\n  useEffect(() => {\n    searchParams.set('page', '1');\n  }, [query]);\n\n  useEffect(() => {\n    loadImages();\n  }, [query, page]);\n\n  if (!images) {\n    return null;\n  }\n\n  return (\n    <section className=\"searching-page\">\n      <Search />\n\n      <Gallery\n        images={images.results}\n        columnsCount={columnsCount}\n        onChangeColumn={setColumnsCount}\n      />\n    </section>\n  );\n};\n","import React, { FC, memo } from 'react';\nimport { Search } from '../Search';\n\nexport const Header: FC = memo(() => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__content\">\n        <Search />\n      </div>\n    </header>\n  );\n});\n\nHeader.displayName = 'Header';\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Header } from '../../components/Header';\nimport { Gallery } from '../../components/Gallery';\nimport { getImages } from '../../api/images';\nimport { Image } from '../../types/Image';\nimport { FetchLoadErrors } from '../../utils/FetchLoadErrors';\n\nexport const HomePage = () => {\n  const [images, setImages] = useState<Image[]>([]);\n  const [columnsCount, setColumnsCount] = useState(3);\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n\n  const loadImages = async () => {\n    try {\n      const imagesFromServer = await getImages(+page);\n\n      setImages(imagesFromServer);\n    } catch {\n      throw new Error(FetchLoadErrors.UNABLE_LOAD);\n    }\n  };\n\n  useEffect(() => {\n    loadImages();\n  }, [page]);\n\n  return (\n    <>\n      <Header />\n\n      <Gallery\n        images={images}\n        columnsCount={columnsCount}\n        onChangeColumn={setColumnsCount}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ImageModal } from './components/ImageModal';\nimport { SearchPage } from './pages/SearchPage';\nimport { HomePage } from './pages/HomePage';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"/\" element={<HomePage />} />\n\n        <Route path=\"/photos\">\n          <Route index element={<HomePage />} />\n          <Route path=\":id\" element={<ImageModal />} />\n        </Route>\n\n        <Route path=\"/search\" element={<SearchPage />}>\n          <Route index element={<SearchPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<h1>Page not Fount</h1>} />\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}